# SkillSwap Project - Technology Stack

## Frontend Technologies
- **Framework**: Next.js 15.3.0 (Released in 2025)
- **UI Library**: React 19
- **Styling**: Tailwind CSS with custom UI components
- **Component Library**: Custom components based on Radix UI primitives
- **Type Safety**: TypeScript for static type checking
- **Form Handling**: React Hook Form with Zod validation
- **Notifications UI**: Sonner for toast notifications
- **Icons**: Lucide React for consistent iconography
- **Date Formatting**: date-fns for date manipulation and formatting
- **Theme Management**: next-themes for light/dark mode support
- **CSS Utilities**: class-variance-authority, clsx, and tailwind-merge for class composition

## Backend & Infrastructure
- **Database**: PostgreSQL (hosted on Supabase)
- **Authentication**: Supabase Auth with email/password flow
- **Data Storage**: Supabase Storage for image uploads and file management
- **Realtime Features**: Supabase Realtime for websocket connections and live updates
- **API Routes**: Next.js App Router API routes with server components
- **Security**: Row-Level Security (RLS) in PostgreSQL for data protection
- **Middleware**: Custom Next.js middleware for route protection and authentication
- **Server Actions**: For secure form submissions and data mutations

## Development Tools
- **Package Manager**: npm/yarn for dependency management
- **Linting**: ESLint for code quality and consistency
- **Routing**: Next.js App Router for file-based routing
- **Environment Management**: Environment variables for configuration
- **Type Generation**: Generated TypeScript types from Supabase schema

## Key Technical Features
- **Server Components**: For data fetching and initial rendering
- **Client Components**: For interactive UI elements
- **Real-time Updates**: For messaging and notifications
- **Authentication Flow**: Email/password with confirmation
- **File Upload**: For profile images
- **CSRF Protection**: Using Next.js built-in protection
- **Cookie Management**: HTTP-only cookies with proper security settings
- **Multi-level Fallback System**: For notification delivery reliability

## Deployment & Infrastructure
- **Hosting**: Likely Vercel (based on environment variable usage)
- **Database Hosting**: Supabase cloud platform
- **Asset Delivery**: Next.js optimized image delivery
- **Static Generation**: For performance optimization
- **Edge Functions**: For global low-latency operations

This modern stack provides a balance of developer productivity, performance, and user experience. The combination of Next.js 15.3 with Supabase creates a powerful foundation for building feature-rich web applications with minimal backend maintenance.
